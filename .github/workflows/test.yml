name: test

on:
  push:
  pull_request:

jobs:


  lin:

    strategy:
      fail-fast: false
      matrix:
        os: [
          '18.04',
          '20.04'
        ]
    runs-on: ubuntu-${{ matrix.os }}
    name: '🐧 Ubuntu ${{ matrix.os }}'
    steps:

    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt update -qq
        sudo apt install -y make g++ git bison flex gperf libreadline-dev autoconf

    - name: Build
      run: |
        autoconf
        ./configure
        sudo make install
        make check

    - name: Test
      run: ./.github/test.sh


  win:
    runs-on: windows-latest
    name: '🧊 Windows'
    steps:

    - run: git config --global core.autocrlf input

    - uses: actions/checkout@v2

    - uses: msys2/setup-msys2@v2
      with:
        release: false
        msystem: MINGW64
        install: >
          base-devel
          mingw-w64-x86_64-toolchain
        update: true

    - name: Build and test
      shell: bash
      run: |
        export mingw64='cmd //C RefreshEnv.cmd & set MSYS=winsymlinks:nativestrict & C:\\msys64\\msys2_shell.cmd -defterm -no-start -mingw64 -full-path -here -c "$@" --'

        $mingw64 ./.github/build.sh

        $mingw64 ./.github/test.sh
